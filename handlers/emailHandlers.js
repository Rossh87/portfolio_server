const mailgun = require('../services/mailgun');
const {body, validationResult} = require('express-validator/check');
const {sanitizeBody} = require('express-validator/filter');

// This function responsible for sending email based on 
// data in POST request.
function sendEmailMessage(req, res, next) {
	// extract data from req.body
	let {name, email, message} = req.body;
	
	// assemble a data object for mailgun client
	const dataForMail = {
		from: name + ' <' + email + '>',
		to: 'hunter.dev.87@gmail.com',
		subject: 'From portfolio site',
		text: `${message}`
	}

	// send message as email to my account
	mailgun.messages().send(dataForMail, (err, body) => {
		if(err) {
			next(err);
		}
		console.log(dataForMail);
	});

	res.send('Message Sent!')
}

// Array of validator funcs that mutate req object and add error object
// for any data that does not meet validator requirements.
const validatorChain = [
	body('email', 'Invalid Email')
		.isEmail()
		.normalizeEmail(),

	body('name', 'Please include your name.')
		.not().isEmpty()
		.escape(),

	body('message', 'Please include a message.')
		.not().isEmpty()
		.escape()
]

// Check for errors generated by validatorChain.  If any are found,
// terminate req/res cycle by responding with a 422 err containing
// array of found errors.
function extractErrors(req, res, next) {
	const errors = validationResult(req);

	if(!errors.isEmpty()) {
		return res.status(422).json({errors: errors.array()})
	};

	// If no errors, proceed to send email w/ sanitized data.
	next();
}

module.exports = {sendEmailMessage, extractErrors, validatorChain};